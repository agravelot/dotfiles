[user]
	name = Antoine GRAVELOT
	email = antoine.gravelot@hotmail.fr
	signingkey = ~/.ssh/id_ed25519.pub

; Enforce go mod to use ssh keys
[url "ssh://git@work.github.com/"]
	insteadOf = https://github.com/

[includeIf "hasconfig:remote.*.url:git@work.github.com:keplr-team/**"]
  path = ~/.gitconfig-work

[core]
	autocrlf = input
  editor = nvim -f
  core = pager
  pager = delta
	excludesFile = ~/.gitignore_global

[interactive]
  diffFilter = delta --color-only

[delta]
  navigate = true
  side-by-side = true
  line-numbers = true

[merge]
  tool = diff3

[color]
	ui = auto 

[branch]
	autosetuprebase = always
	sort = -committerdate

[pull]
	rebase = merges

[push]
	default = upstream
  followTags = true
	gpgSign = if-asked

[stash]
	showPatch = true
  all = true

[rebase]
	autostash = true
	autosquash = true
	updateRefs = true

[commit]
	verbose = true
	gpgsign = true

[submodule]
	fetchJobs = 8

[diff]
	compactionHeuristic = true
	indentHeuristic = on
  colorMoved = default

[init]
  defaultBranch = main

[fetch]
	prune = true

[web]
	browser = open

[rerere]
	enabled = true

[column]
	ui = auto

[gpg]
	format = ssh

[gpg "ssh"]
  allowedSignersFile = ~/.ssh/allowed_signers
  format = ssh

[alias]
  # List available aliases
  aliases = !git config --get-regexp alias | sed -re 's/alias\\.(\\S*)\\s(.*)$/\\1 = \\2/g'
  # Command shortcuts
  ci = commit
  co = checkout
  st = status
  # Display tree-like log, because default log is a pain…
  lg = log --graph --date=relative --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset'
  # Useful when you have to update your last commit
  # with staged files without editing the commit message.
  oops = commit --amend --no-edit
  # Ensure that force-pushing won't lose someone else's work (only mine).
  push-with-lease = push --force-with-lease
  # Rebase won’t trigger hooks on each "replayed" commit.
  # This is an ugly hack that will replay each commit during rebase with the
  # standard `commit` command which will trigger hooks.
  rebase-with-hooks = rebase -x 'git reset --soft HEAD~1 && git commit -C HEAD@{1}'
  # List local commits that were not pushed to remote repository
  review-local = "!git lg @{push}.."
  # Edit last commit message
  reword = commit --amend
  # Undo last commit but keep changed files in stage
  uncommit = reset --soft HEAD~1
  # Remove file(s) from Git but not from disk
  untrack = rm --cache --
	staash = stash --all
	undo = reset --soft HEAD^
  f = absorb --force --and-rebase
